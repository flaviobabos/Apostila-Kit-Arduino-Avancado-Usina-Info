/*===========================================================================
Código: Flavio Babos – Parceiro Usina Info
Projeto Sensor de Estacionamento
=============================================================================*/

// Pinos usados
#define LEDverde 2
#define LEDazul 3
#define LEDvermelho 4
#define TRIGGER 5
#define ECHO 6
#define BUZZER 9

// Constantes utilizadas
const float sound = 34300.0; // Velocidade do som em cm/s
const float limite1 = 30.0;  // Limites de distância em cm
const float limite2 = 20.0;
const float limite3 = 10.0;

void setup() {

  // Inicie o circuito de montagem
  Serial.begin(9600);

  // Modo de entrada / saída do pino
  pinMode(LEDverde, OUTPUT);
  pinMode(LEDazul, OUTPUT);
  pinMode(LEDvermelho, OUTPUT);
  pinMode(ECHO, INPUT);
  pinMode(TRIGGER, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Função que desliga as LEDs
  desligarLEDs();

}

void loop() {

  // Prepare o sensor ultrassônico
  inicializarTrigger();

  // Obtenha a distância
  float distancia = calcularDistancia ();

  // Desligar os LEDs
  desligarLEDs();

  // Alerta se estiver dentro da zona de perigo
  if (distancia < limite1)

  {
    // Dispara os alertas
    alertas(distancia);
  }

}

// Função de desligar os LEDs
void desligarLEDs()
{
  digitalWrite(LEDverde, LOW);
  digitalWrite(LEDazul, LOW);
  digitalWrite(LEDvermelho, LOW);
}

// Verifique se algum alerta visual ou sonoro é necessário
void alertas (float distancia){

  // Se a distância estiver entre o limite1 e o limite2 
  if (distancia < limite1 && distancia >= limite2){
  
    // Ligue o LED Verde
    digitalWrite(LEDverde, HIGH);
    tone(BUZZER, 2000, 200);
    }
 
  // Se a distância estiver entre o limite2 e o limite3
  else if (distancia < limite2 && distancia >= limite3){

    // Ligue o LED azul
    digitalWrite(LEDazul, HIGH);
    tone(BUZZER, 2500, 200);
    }
    
  // Se a distância for menor que o limite3  
  else if (distancia < limite3){

    // Ligue o LED vermelho
    digitalWrite(LEDvermelho, HIGH);
    tone(BUZZER, 3000, 200);
    }
}

// Função usada para calcular a distância entre o som e o objeto
float calcularDistancia(){
  unsigned long time = pulseIn(ECHO, HIGH);
  float distancia = time* 0.000001 * sound / 2.0;
  Serial.print(distancia);
  Serial.print("cm");
  Serial.println();
  delay(500);
  return distancia;
  }
  
// Função usada para inicializar o Trigger
 void inicializarTrigger(){
  digitalWrite(TRIGGER, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIGGER, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER, LOW);
}
